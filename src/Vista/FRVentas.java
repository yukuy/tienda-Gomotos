package Vista;

import Modelo.Cliente;
import Modelo.ConexionBD;
import Modelo.DetalleVentas;
import Modelo.Ventas;
import java.awt.Component;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FRVentas extends javax.swing.JInternalFrame {
    
    // crear tabla
    private DefaultTableModel modeloDatosRep;

    //lista para el detalle de venta de los repuestos
    ArrayList<DetalleVentas> listarRepuestos = new ArrayList<>();
    private DetalleVentas repuestos;

    //variables
    private int idRepuesto = 0;
    private String nombre = "";
    private int cantidadRepuestosBD;
    private int precioU = 0;

    private int cantidad = 0;
    private int Totalpagar = 0;

    
    public FRVentas() {
        initComponents();

        // cargar clientes y repuestos y la tabla
        this.cargarClientes();
        this.cargarProductos();
        this.iniciarTabla();

    }

    // metodo para iniciar la tabla
    private void iniciarTabla() {
        modeloDatosRep = new DefaultTableModel();
        //añadir columnas a la tabla
        modeloDatosRep.addColumn("id");
        modeloDatosRep.addColumn("Nombre");
        modeloDatosRep.addColumn("Cantidad");
        modeloDatosRep.addColumn("Precio U");
        modeloDatosRep.addColumn("SubTotal");
        modeloDatosRep.addColumn("Aaccion");
        //agregar los datos a la tabla
        this.tblfactura.setModel(modeloDatosRep);
    }
    //metodo para mostrar la imformacion en la tabla

    private void listarTablaRepuestos() {
        this.modeloDatosRep.setRowCount(listarRepuestos.size());
        for (int i = 0; i < listarRepuestos.size(); i++) {
            this.modeloDatosRep.setValueAt(i + 1, i, 0);
            this.modeloDatosRep.setValueAt(listarRepuestos.get(i).getNombre(), i, 1);
            this.modeloDatosRep.setValueAt(listarRepuestos.get(i).getCantidad(), i, 2);
            this.modeloDatosRep.setValueAt(listarRepuestos.get(i).getPrecioU(), i, 3);
            this.modeloDatosRep.setValueAt(listarRepuestos.get(i).getSutTotal(), i, 4);
            this.modeloDatosRep.setValueAt("Eliminar", i, 5);//aqui luego poner un botton de eliminar
        }
        //Añadir ala tabla
        tblfactura.setModel(modeloDatosRep);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        lblcliente = new javax.swing.JLabel();
        txtcantidadcompra = new javax.swing.JTextField();
        lblcantidad = new javax.swing.JLabel();
        btguardar = new javax.swing.JButton();
        ComCliente = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        ComRepuesto = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btfactura = new javax.swing.JButton();
        lblSuttotal = new javax.swing.JLabel();
        txtSuttotal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblfactura = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();

        jLabel3.setText("jLabel3");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jMenu1.setText("jMenu1");

        setClosable(true);
        setIconifiable(true);
        setTitle("Formulario Facturas");

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));

        lblcliente.setText("Cliente");

        lblcantidad.setText("CantidadCompra");

        btguardar.setText("Guardar Repuesto");
        btguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btguardarActionPerformed(evt);
            }
        });

        jLabel1.setText("Repuesto");

        ComRepuesto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione repuesto", "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btguardar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblcliente)
                            .addComponent(ComRepuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(ComCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblcantidad)
                            .addComponent(txtcantidadcompra, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblcliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btguardar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblcantidad))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComRepuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcantidadcompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 255, 204));

        btfactura.setText("Nueva factura");
        btfactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btfacturaActionPerformed(evt);
            }
        });

        lblSuttotal.setText("Total a pagar");

        txtSuttotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSuttotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(btfactura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(lblSuttotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSuttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSuttotal)
                        .addComponent(btfactura))
                    .addComponent(txtSuttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
        );

        tblfactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblfactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblfacturaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblfactura);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Png/logo png.jpg"))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(0, 255, 204));

        jLabel4.setText("Fecha");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(28, 28, 28)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btguardarActionPerformed

        String combo = this.ComRepuesto.getSelectedItem().toString();
        int sutTotal = 0;
        // validar la selecion de un producto
        if (combo.equalsIgnoreCase("Selecione el repuesto")) {
            JOptionPane.showMessageDialog(null, "Selecione un Repuesto");
        } else {
            //validar que ingrese una cantidad
            if (!txtcantidadcompra.getText().isEmpty()) {
                //validar que el usuario no ingrese caracteres no numericos
                boolean validacion = validar(txtcantidadcompra.getText());
                if (validacion == true) {
                    //validar que la cantidad sea mayor a cero
                    if (Integer.parseInt(txtcantidadcompra.getText()) > 0) {
                        cantidad = Integer.parseInt(txtcantidadcompra.getText());
                        //ejecutar metodo para obtener metodos y productos
                        this.DatosProducto();
                        //validar la cantidad de productos selecionados no supere la cantidad de la base de datos
                        if (cantidad <= cantidadRepuestosBD) {

                            sutTotal = precioU * cantidad;

                            // se crea un nuevo producto
                            repuestos = new DetalleVentas(idRepuesto, WIDTH, cantidad, sutTotal, precioU, nombre);
                            /// SE AGREGA UN PRODUCTO A LA LISTA
                            listarRepuestos.add(repuestos);
                            JOptionPane.showMessageDialog(null, "Producto agregado");
                            txtcantidadcompra.setText("");//limpiar campo
                            //bolver a cargar combo repuestos
                            this.cargarProductos();
                            
                            Totalpagar += sutTotal;
                            
                            txtSuttotal.setText("" +Totalpagar);
                        } else {
                            JOptionPane.showMessageDialog(null, "La cantidad supera el Stock");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La cantidad no puede ser cero");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "En la cantidad no se admiten caracteres no numericos");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese la cantidad de repuestos que quiere comprar");
            }
        }
        //llamar al metodo
        this.listarTablaRepuestos();
        
        
    }//GEN-LAST:event_btguardarActionPerformed

    private void txtSuttotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSuttotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSuttotalActionPerformed

    int idrepuestos = 0;
    private void tblfacturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblfacturaMouseClicked
        int fila_point = tblfactura.rowAtPoint(evt.getPoint());
        int columna_point = 0;
        int precio = 0;
        if (fila_point > -1) {
            idrepuestos = (int) modeloDatosRep.getValueAt(fila_point, columna_point);
            System.out.println(""+tblfactura.getValueAt(fila_point, 3));
            double precio1 = (double)tblfactura.getValueAt(fila_point, 3);
            precio = (int) precio1;
        }
        int opcion = JOptionPane.showConfirmDialog(null, "¿Esta seguro de eliminar al producto?");
        //opciones de confirmar dialogo (si = 0; no = 1; cancel = 2; close = -1;)
        switch (opcion) {
            case 0:// preciona el si
                listarRepuestos.remove(idrepuestos - 1);
                Totalpagar = Totalpagar - precio;
                txtSuttotal.setText(Totalpagar+"");
                this.listarTablaRepuestos();
                break;
            case 1://presione no
                break;
            default:// sea que precione cancel (2) o close (-1)
                break;
        }
    }//GEN-LAST:event_tblfacturaMouseClicked

    private void btfacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btfacturaActionPerformed
 

        //obtener fecha
        String Fecha = txtFecha.getText();
        System.out.println("fecha "+Fecha);
        int idC = ((Cliente) ComCliente.getSelectedItem()).getIdCliente();
        System.out.println("id cliente "+idC);
        System.out.println("total "+Totalpagar);
        //insertar itens a la tabla factura en la bd gomotos1
        Ventas mif = new Ventas(idC, Fecha, Totalpagar);
        int idfactura = mif.insertar();

     ///insertar los detalles de la factura en la tabla detalle factura 
        DetalleVentas Detallefac;

        for (int i = 0; i < listarRepuestos.size(); i++) {
            Detallefac = new DetalleVentas(idrepuestos, idfactura, cantidad, precioU*cantidad, precioU, nombre);
            Detallefac.setIdRepuestos(listarRepuestos.get(i).getIdRepuestos());
            Detallefac.setIdFactura(idfactura);
            Detallefac.setNombre(listarRepuestos.get(i).getNombre());
            Detallefac.setCantidad(listarRepuestos.get(i).getCantidad());
            Detallefac.setPrecioU(listarRepuestos.get(i).getPrecioU());
            Detallefac.setSutTotal(listarRepuestos.get(i).getSutTotal());
            
            System.out.println("tamaño de labla" + tblfactura.getRowCount());
            Detallefac.insertar();
        }

        System.out.println("id cliente " + ((Cliente) ComCliente.getSelectedItem()).getIdCliente());
        
        JOptionPane.showMessageDialog(null, "Factura generada");
        limpiarTabla();
        txtFecha.setText("");
        txtSuttotal.setText("");
        
        
              
        
    }//GEN-LAST:event_btfacturaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Cliente> ComCliente;
    private javax.swing.JComboBox<String> ComRepuesto;
    private javax.swing.JButton btfactura;
    private javax.swing.JButton btguardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSuttotal;
    private javax.swing.JLabel lblcantidad;
    private javax.swing.JLabel lblcliente;
    private javax.swing.JTable tblfactura;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtSuttotal;
    private javax.swing.JTextField txtcantidadcompra;
    // End of variables declaration//GEN-END:variables

    //metodo para cargar clientes en en combobox
    private void cargarClientes() {
        try {
            PreparedStatement sql = ConexionBD.conexion.prepareStatement("SELECT * FROM cliente " + this.getClass().getSimpleName());
            ResultSet rs = sql.executeQuery();
            Cliente mC = new Cliente();
            mC.setNombre("Seleccione un cliente");
            ComCliente.removeAllItems();
            ComCliente.addItem(mC);
            while (rs.next()) {
                mC = new Cliente();
                mC.setIdCliente(rs.getInt("idCliente"));
                mC.setNombre(rs.getString("nombre"));

                ComCliente.addItem(mC);
            }

        } catch (SQLException e) {
            System.out.println("Error al cargar clientes " + e.getMessage());
        }
    }

    private void cargarProductos() {
        try {
            PreparedStatement sql = ConexionBD.conexion.prepareStatement("SELECT * FROM repuestos " + this.getClass().getSimpleName());
            ResultSet rs = sql.executeQuery();
            ComRepuesto.removeAllItems();
            ComRepuesto.addItem("Selecione el repuesto");
            while (rs.next()) {
                ComRepuesto.addItem(rs.getString("nombre"));
            }

        } catch (SQLException e) {
            System.out.println("Error al cargar repuestos " + e.getMessage());
        }
    }

    //metodo pra validar que el usuario no ingrese caracteres no numericos
    private boolean validar(String valor) {
        try {
            int num = Integer.parseInt(valor);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    //metodo para mostrar los datos del producto   
    private void DatosProducto() {
        try {
            PreparedStatement sql = ConexionBD.conexion.prepareStatement("SELECT * FROM repuestos WHERE nombre = '"
                    + this.ComRepuesto.getSelectedItem() + "'");
            ResultSet rs = sql.executeQuery();
            while (rs.next()) {
                idRepuesto = rs.getInt("idRepuestos");
                nombre = rs.getString("nombre");
                cantidadRepuestosBD = rs.getInt("cantidad");
                precioU = rs.getInt("precio");

            }
        } catch (SQLException e) {
            System.out.println("Error al obtener datos del producto, " + e);
        }
    }
    
    public void limpiarTabla() {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tblfactura.getModel();
            int filas = tblfactura.getRowCount();
            for (int i = 0; i <= filas; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            System.out.println("Error al limpiar tabla "+e.toString());
        }
    }
}